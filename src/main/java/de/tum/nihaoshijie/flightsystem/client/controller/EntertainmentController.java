package de.tum.nihaoshijie.flightsystem.client.controller;import com.jfoenix.controls.JFXButton;import de.tum.nihaoshijie.flightsystem.server.persistence.Entertainment;import de.tum.nihaoshijie.flightsystem.server.persistence.Poi;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.scene.control.ComboBox;import javafx.scene.control.TextField;import javafx.scene.layout.AnchorPane;import javafx.scene.media.Media;import javafx.scene.media.MediaPlayer;import javafx.scene.media.MediaView;import org.springframework.core.ParameterizedTypeReference;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.web.reactive.function.client.WebClient;import java.io.File;import java.io.IOException;import java.util.List;import java.util.Objects;public class EntertainmentController {    private static final String SERVICE_MAIN_PATH = "/clientview/fxmls/ServiceMain.fxml";    private WebClient webClient;    private MediaPlayer player;    @FXML    private JFXButton backButton;    @FXML    private AnchorPane mainPane;    @FXML    private MediaView mediaView;    @FXML    private JFXButton pauseButton;    @FXML    private JFXButton playButton;    @FXML    private JFXButton searchButton;    @FXML    private JFXButton stopButton;    @FXML    private TextField titleTextField;    @FXML    private ComboBox<String> typeCB;    @FXML    void initialize() {        webClient = WebClient.builder().baseUrl("http://localhost:8080/")                .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)                .build();        typeCB.getItems().addAll("Movie", "Music");        typeCB.getSelectionModel().select(0);    }    @FXML    void search(ActionEvent event) {        if (titleTextField.getText() == null) {            return;        }        final List<Entertainment> entertainments = webClient.get().uri(urlBuilder -> urlBuilder                        .path("/entertainment")                        .queryParam("name", titleTextField.getText())                        .queryParam("type", typeCB.getValue())                        .build())                .retrieve()                .bodyToMono(new ParameterizedTypeReference<List<Entertainment>>() {                })                .onErrorStop()                .block();        if (entertainments == null || entertainments.size() == 0) {            return;        }        File file = new File(Objects.requireNonNull(entertainments.get(0).getUrl()));        Media m = new Media(file.toURI().toString());        player = new MediaPlayer(m);        mediaView.setMediaPlayer(player);    }    @FXML    void pause(ActionEvent event) {        player.pause();    }    @FXML    void play(ActionEvent event) {        player.play();    }    @FXML    void selectType(ActionEvent event) {        typeCB.getSelectionModel().select(typeCB.getValue());    }    @FXML    void stop(ActionEvent event) {        player.stop();    }    @FXML    void back(ActionEvent event) throws IOException {        mainPane.getScene().setRoot(FXMLLoader.load(Objects.requireNonNull(getClass().getResource(SERVICE_MAIN_PATH))));    }}